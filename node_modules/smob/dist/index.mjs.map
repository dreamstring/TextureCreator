{"version":3,"file":"index.mjs","sources":["../src/constants.ts","../src/utils/check.ts","../src/utils/array.ts","../src/utils/clone.ts","../src/utils/cut.ts","../src/utils/object.ts","../src/utils/options.ts","../src/module.ts","../src/presets.ts"],"sourcesContent":["/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport enum PriorityName {\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function isObject(item: unknown) : item is Record<string, any> {\n    return (\n        !!item &&\n        typeof item === 'object' &&\n        !Array.isArray(item)\n    );\n}\n\nexport function isSafeKey(key: string) : boolean {\n    return key !== '__proto__' &&\n        key !== 'prototype' &&\n        key !== 'constructor';\n}\n\nexport function isEqual(x: any, y: any): boolean {\n    if (Object.is(x, y)) return true;\n\n    if (x instanceof Date && y instanceof Date) {\n        return x.getTime() === y.getTime();\n    }\n\n    if (x instanceof RegExp && y instanceof RegExp) {\n        return x.toString() === y.toString();\n    }\n\n    if (\n        isObject(x) &&\n        isObject(y)\n    ) {\n        const keysX = Reflect.ownKeys(x) as string[];\n        const keysY = Reflect.ownKeys(y) as string[];\n        if (keysX.length !== keysY.length) {\n            return false;\n        }\n\n        for (let i = 0; i < keysX.length; i++) {\n            const key = keysX[i];\n            if (!Reflect.has(y, key) || !isEqual(x[key], y[key])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    if (\n        Array.isArray(x) &&\n        Array.isArray(y)\n    ) {\n        if (x.length !== y.length) {\n            return false;\n        }\n\n        for (let i = 0; i < x.length; i++) {\n            if (!isEqual(x[i], y[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isEqual } from './check';\n\nexport function distinctArray<T = any>(arr: T[]) : T[] {\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (isEqual(arr[i], arr[j])) {\n                arr.splice(j, 1);\n            }\n        }\n    }\n\n    return arr;\n}\n","/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isObject } from './check';\n\n/* istanbul ignore next */\nconst gT = (() => {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof self !== 'undefined') {\n        // eslint-disable-next-line no-restricted-globals\n        return self;\n    }\n\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n\n    throw new Error('unable to locate global object');\n})();\n\nexport function polyfillClone<T>(input: T) {\n    const map = new WeakMap();\n\n    const fn = <A>(value: A) : A => {\n        if (Array.isArray(value)) {\n            if (map.has(value)) {\n                return map.get(value);\n            }\n\n            const cloned = [] as A;\n            map.set(value, cloned);\n\n            value.map((el) => (cloned as any[]).push(fn(el)));\n\n            return cloned;\n        }\n\n        if (isObject(value)) {\n            if (map.has(value)) {\n                return map.get(value);\n            }\n\n            const output = {} as A;\n            const keys = Object.keys(value);\n\n            map.set(value, output);\n            for (let i = 0; i < keys.length; i++) {\n                output[keys[i] as keyof A] = fn(value[keys[i]]);\n            }\n\n            return output;\n        }\n\n        return value;\n    };\n\n    return fn(input);\n}\n\n/* istanbul ignore next */\nexport function clone<T>(value: T) : T {\n    if (gT.structuredClone) {\n        return gT.structuredClone(value);\n    }\n\n    /* istanbul ignore next */\n    return polyfillClone(value);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isObject } from './check';\n\nexport function cutObject<T extends Record<string, any>>(input: T, depth: number) : T {\n    if (depth < 0) {\n        return {} as T;\n    }\n\n    const value = { ...input };\n    const keys : (keyof T)[] = Object.keys(value);\n\n    for (let i = 0; i < keys.length; i++) {\n        if (isObject(value[keys[i]])) {\n            value[keys[i]] = cutObject(value[keys[i]], depth - 1);\n        }\n    }\n\n    return value;\n}\n","/*\n * Copyright (c) 2021.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { PriorityName } from '../constants';\nimport type { Options, OptionsInput } from '../type';\n\nexport function buildOptions(options?: OptionsInput) : Options {\n    options = options || {};\n\n    options.array = options.array ?? true;\n    options.arrayDistinct = options.arrayDistinct ?? false;\n    options.clone = options.clone ?? false;\n    options.inPlace = options.inPlace ?? false;\n    options.priority = options.priority || PriorityName.LEFT;\n\n    return options as Options;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { PriorityName } from './constants';\nimport type {\n    Merger, MergerContext,\n    MergerResult,\n    MergerSource,\n    MergerSourceUnwrap,\n    OptionsInput,\n} from './type';\n\nimport {\n    buildOptions,\n    clone,\n    distinctArray,\n    hasOwnProperty,\n    isObject,\n    isSafeKey,\n} from './utils';\n\nfunction baseMerger<B extends MergerSource[]>(\n    context: MergerContext,\n    ...sources: B\n) : MergerResult<B> {\n    let target : MergerSourceUnwrap<B>;\n    let source : MergerSourceUnwrap<B> | undefined;\n    if (context.options.priority === PriorityName.RIGHT) {\n        target = sources.pop() as MergerSourceUnwrap<B>;\n        source = sources.pop() as MergerSourceUnwrap<B>;\n    } else {\n        target = sources.shift() as MergerSourceUnwrap<B>;\n        source = sources.shift() as MergerSourceUnwrap<B>;\n    }\n\n    if (!source) {\n        if (\n            Array.isArray(target) &&\n            context.options.arrayDistinct\n        ) {\n            return distinctArray(target) as MergerResult<B>;\n        }\n\n        return target as MergerResult<B>;\n    }\n\n    if (\n        Array.isArray(target) &&\n        Array.isArray(source)\n    ) {\n        target.push(...source as MergerSource[]);\n\n        if (context.options.priority === PriorityName.RIGHT) {\n            return baseMerger(\n                context,\n                ...sources,\n                target,\n            ) as MergerResult<B>;\n        }\n\n        return baseMerger(\n            context,\n            target,\n            ...sources,\n        ) as MergerResult<B>;\n    }\n\n    context.map.set(source, true);\n\n    if (\n        isObject(target) &&\n        isObject(source)\n    ) {\n        const keys = Object.keys(source);\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i] as (keyof MergerSourceUnwrap<B>);\n\n            if (hasOwnProperty(target, key)) {\n                if (!isSafeKey(key as string)) {\n                    continue;\n                }\n\n                if (context.options.strategy) {\n                    const applied = context.options.strategy(target, key as string, source[key]);\n                    if (typeof applied !== 'undefined') {\n                        continue;\n                    }\n                }\n\n                if (\n                    isObject(target[key]) &&\n                    isObject(source[key])\n                ) {\n                    if (context.map.has(source[key])) {\n                        const sourceKeys = Object.keys(source[key] as Record<string, any>);\n                        for (let j = 0; j < sourceKeys.length; j++) {\n                            if (\n                                isSafeKey(sourceKeys[j]) &&\n                                !hasOwnProperty(target[key] as Record<string, any>, sourceKeys[j])\n                            ) {\n                                (target[key] as Record<string, any>)[sourceKeys[j]] = (source[key] as Record<string, any>)[sourceKeys[j]];\n                            }\n                        }\n\n                        continue;\n                    }\n\n                    if (context.options.priority === PriorityName.RIGHT) {\n                        target[key] = baseMerger(\n                            context,\n                            source[key] as MergerSource,\n                            target[key] as MergerSource,\n                        ) as MergerSourceUnwrap<B>[keyof MergerSourceUnwrap<B>];\n                    } else {\n                        target[key] = baseMerger(\n                            context,\n                            target[key] as MergerSource,\n                            source[key] as MergerSource,\n                        ) as MergerSourceUnwrap<B>[keyof MergerSourceUnwrap<B>];\n                    }\n\n                    continue;\n                }\n\n                if (\n                    context.options.array &&\n                    Array.isArray(target[key]) &&\n                    Array.isArray(source[key])\n                ) {\n                    switch (context.options.priority) {\n                        case PriorityName.LEFT:\n                            Object.assign(target, {\n                                [key]: baseMerger(context, target[key] as MergerSource, source[key] as MergerSource),\n                            });\n                            break;\n                        case PriorityName.RIGHT:\n                            Object.assign(target, {\n                                [key]: baseMerger(context, source[key] as MergerSource, target[key] as MergerSource),\n                            });\n                            break;\n                    }\n                }\n            } else {\n                Object.assign(target, {\n                    [key]: source[key],\n                });\n            }\n        }\n    }\n\n    context.map = new WeakMap();\n\n    if (context.options.priority === PriorityName.RIGHT) {\n        return baseMerger(context, ...sources, target) as MergerResult<B>;\n    }\n\n    return baseMerger(context, target, ...sources) as MergerResult<B>;\n}\n\nexport function createMerger(input?: OptionsInput) : Merger {\n    const options = buildOptions(input);\n\n    return <B extends MergerSource[]>(\n        ...sources: B\n    ) : MergerResult<B> => {\n        if (!sources.length) {\n            throw new SyntaxError('At least one input element is required.');\n        }\n\n        const ctx : MergerContext = {\n            options,\n            map: new WeakMap<any, any>(),\n        };\n\n        if (options.clone) {\n            return baseMerger(ctx, ...clone(sources));\n        }\n\n        if (!options.inPlace) {\n            if (options.priority === PriorityName.LEFT) {\n                if (Array.isArray(sources[0])) {\n                    sources.unshift([]);\n                } else {\n                    sources.unshift({});\n                }\n            } else if (Array.isArray(sources[0])) {\n                sources.push([]);\n            } else {\n                sources.push({});\n            }\n        }\n\n        return baseMerger(ctx, ...sources);\n    };\n}\n\nexport const merge = createMerger();\n","/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { createMerger } from './module';\nimport type { MergerResult } from './type';\n\n/**\n * Assign source attributes to a target object.\n *\n * @param target\n * @param sources\n */\nexport function assign<A extends Record<string, any>, B extends Record<string, any>[]>(\n    target: A,\n    ...sources: B\n) : A & MergerResult<B> {\n    return createMerger({\n        inPlace: true,\n        priority: 'left',\n        array: false,\n    })(target, ...sources) as A & MergerResult<B>;\n}\n"],"names":["PriorityName","LEFT","RIGHT","isObject","item","Array","isArray","isSafeKey","key","isEqual","x","y","Object","is","Date","getTime","RegExp","toString","keysX","Reflect","ownKeys","keysY","length","i","has","distinctArray","arr","j","splice","gT","globalThis","self","window","global","Error","polyfillClone","input","map","WeakMap","fn","value","get","cloned","set","el","push","output","keys","clone","structuredClone","cutObject","depth","hasOwnProperty","obj","prop","prototype","call","buildOptions","options","array","arrayDistinct","inPlace","priority","baseMerger","context","sources","target","source","pop","shift","strategy","applied","sourceKeys","assign","createMerger","SyntaxError","ctx","unshift","merge"],"mappings":"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"}